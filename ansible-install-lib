ANSIBLE_VER=2.9.0

# install_pip /usr/bin/python => /usr/bin/python /usr/local/bin/get-pip.py
install_pip () {
    local python_interpreter=$1
    local url=https://bootstrap.pypa.io/get-pip.py
    local getpippy=/tmp/get-pip.py

    echo downloading from $url to $getpippy...
    wget -O $getpippy $url

    echo installing with $python_interpreter...
    $python_interpreter $getpippy
    rm $getpippy
}

install_pip_archlinux () {
    pacman -S --noconfirm python-pip
    pip install --upgrade pip
}

install_pip_fedora () {
    local os_ver=$1
    local pip=$2

    if [ "$os_ver" -ge "29" ];
    then
        dnf install -y python3-pip
    else
        dnf install -y python-pip
        $pip install --upgrade pip
    fi
}

install_pip_ubuntu () {
    install_pip $1
}

install_pip_debian () {
    install_pip $1
}

install_pip_centos () {
    install_pip $1
}

install_pip_alpine () {
    install_pip $1
}

pip_install () {
    local pip=$1
    local pkgs=$2
    $pip install --no-cache-dir $pkgs
}

# pip_install_ansible pip3 2.8.4 => pip3 install ansible==2.8.4
pip_install_ansible () {
    local pip=$1
    local ansible_ver=$2
    pip_install $pip ansible==$ansible_ver
}

ping_localhost () {
    ansible --version \
        && ansible all --list-hosts \
        && ansible localhost -m ping
}

write_local_cfg () {
    mkdir -p /etc/ansible
    cat >/etc/ansible/ansible.cfg <<HERE
[defaults]
inventory = /etc/ansible/inventories
transport = local
callback_whitelist = timer,profile_tasks
HERE
}

write_inventories () {
    local os_group_name=$1
    local ansible_python_interpreter=$2

    mkdir -p /etc/ansible/inventories
    cat >/etc/ansible/inventories/localhost <<HERE
localhost

[$os_group_name]
localhost

[$os_group_name:vars]
ansible_python_interpreter=$ansible_python_interpreter
HERE
}

write_dockerfile () {
    local upstream_registry=$1
    local upstream_namespace=$2
    local upstream_repo=$3

    local os=$4
    local dotver=$5
    local dashver=$6

    local fq_upstream=${upstream_registry}/${upstream_namespace}/${upstream_repo}:${dotver}
    if [ "${upstream_namespace}" = "" ];
    then
        fq_upstream=${upstream_registry}/${upstream_repo}:${dotver}
    fi

    dockerfile=Dockerfile.${os}_${dotver}
    echo writing Dockerfile: $dockerfile
    cat > $dockerfile <<EOF
FROM $fq_upstream
MAINTAINER "Andrew Rothstein" andrew.rothstein@gmail.com

ADD ansible-install-lib ansible-install-lib
ADD install.sh install.sh
RUN ./install.sh ${os} ${dashver}
EOF
}

write_dockerfile_archlinux () {
    local dotver=$1
    local dashver=$2
    write_dockerfile docker.io archlinux base archlinux $dotver $dashver
}

write_dockerfile_simple () {
    local os=$1
    local dotver=$2
    local dashver=$3
    write_dockerfile docker.io library $os $os $dotver $dashver
}

write_dockerfile_alpine () {
    write_dockerfile_simple alpine $1 $2
}

write_dockerfile_centos () {
    write_dockerfile_simple centos $1 $2
}

write_dockerfile_debian () {
    write_dockerfile_simple debian $1 $2
}

write_dockerfile_ubuntu () {
    write_dockerfile_simple ubuntu $1 $2
}

write_dockerfile_fedora () {
    local dotver=$1
    local dashver=$2
    if [ "$dotver" -ge "24" ];
    then
        write_dockerfile registry.fedoraproject.org '' fedora fedora $1 $2
    else
        write_dockerfile_simple fedora $dotver $dashver
    fi
}

write_dockerfile_ubi () {
    local major_ver=$1
    local dotver=$2
    local dashver=$3
    write_dockerfile registry.access.redhat.com ubi${major_ver} ubi ubi${major_ver} $dotver $dashver
}

write_dockerfile_ubi8 () {
    write_dockerfile_ubi 8 $1 $2
}

PYTHON_MIRROR=https://www.python.org/ftp/python
install_python () {
    local python_ver=$1
    local python_name=Python-$python_ver
    local python_tgz=${python_name}.tgz
    wget $PYTHON_MIRROR/$python_ver/$python_tgz
    tar zxvf $python_tgz
    cd $python_name
    ./configure --enable-optimizations
    make altinstall
    cd ..
    rm -rf $python_tgz $python_name
}

PYTHON_DEP_PKGS='gcc make openssl-devel bzip2-devel libffi-devel'

install_fq_pre_centos () {
    local os_ver=$1
    yum update -y

    if [ "$os_ver" -gt 7 ];
    then
        yum install -y wget python3
    else
        yum install -y wget python
    fi
}

install_fq_post_centos () {
    yum clean all
    rm -rf /var/cache/yum
}

install_fq_pre_ubi () {
    yum update -y
    yum install -y wget python36
}

install_fq_post_ubi () {
    yum celan all
    rm -rf /var/cache/yum
}

install_fq_pre_alpine () {
    apk update
    apk upgrade
    apk add \
        python3 \
        python3-dev \
        build-base \
        libffi-dev \
        openssl-dev \
        wget \
        ca-certificates
}

install_fq_post_alpine () {
    apk del \
        build-base \
        libffi-dev \
        openssl-dev
    rm -rf /var/cache/apk/*
}

install_fq_pre_ubuntu () {
    os_ver=$1
    apt-get update -y
    apt-get upgrade -y
    apt-get install -y wget python3

    if [ "$os_ver" = "bionic" ];
    then
       apt-get install -y python3-distutils
    fi
}

install_fq_post_ubuntu () {
    apt-get clean -y
}

install_fq_pre_archlinux () {
    pacman -S -y
    pacman -S --noconfirm python ca-certificates
}

install_fq_pre_fedora () {
    local os_ver=$1
    dnf update -y
    dnf install -y wget

    if [ "$os_ver" -ge "29" ];
    then
        dnf install -y python3
    else
        dnf install -y python
    fi
}

install_fq_post_fedora () {
    dnf clean all
}

install_fq_pre_debian () {
    local os_ver=$1
    apt-get update -y
    apt-get upgrade -y
    apt-get install -y wget

    if [ "$os_ver" = "jessie" ];
    then
        apt-get install -y python
    else
        apt-get install -y python3
    fi

    if [ "$os_ver" = "buster" ];
    then
        apt-get install -y python3-distutils
    fi
}

install_fq_post_debian () {
    apt-get clean
}

install_fq_fedora () {
    local os_ver=$1
    local python_interpreter=$2
    local pip=$3
    local ansible_ver=$4

    install_fq_pre_fedora $os_ver

    install_pip_fedora $os_ver $pip
    pip_install_ansible $pip $ansible_ver

    install_fq_post_fedora

    write_local_cfg
    write_inventories fedora_${os_ver} $python_interpreter
    ping_localhost
}

install_fq_archlinux () {
    local os_ver=$1
    local python_interpreter=$2
    local pip=$3
    local ansible_ver=$4

    install_fq_pre_archlinux

    install_pip_archlinux $python_interpreter
    pip_install_ansible $pip $ansible_ver

    write_local_cfg
    write_inventories archlinux_${os_ver} $python_interpreter
    ping_localhost
}

install_fq_ubuntu () {

    local os_ver=$1
    local python_interpreter=$2
    local pip=$3
    local ansible_ver=$4

    install_fq_pre_ubuntu $os_ver

    install_pip_ubuntu $python_interpreter
    pip_install_ansible $pip $ansible_ver

    install_fq_post_ubuntu

    write_local_cfg
    write_inventories ubuntu_${os_ver} $python_interpreter
    ping_localhost
}

install_fq_debian () {

    local os_ver=$1
    local python_interpreter=$2
    local pip=$3
    local ansible_ver=$4

    install_fq_pre_debian $os_ver

    install_pip_debian $python_interpreter
    pip_install_ansible $pip $ansible_ver

    install_fq_post_debian

    write_local_cfg
    write_inventories debian_${os_ver} $python_interpreter
    ping_localhost
}

install_fq_centos () {
    local os_ver=$1
    local python_interpreter=$2
    local pip=$3
    local ansible_ver=$4

    install_fq_pre_centos $os_ver

    install_pip_centos $python_interpreter
    pip_install_ansible $pip $ansible_ver

    install_fq_post_centos

    write_local_cfg
    write_inventories centos_${os_ver} $python_interpreter
    ping_localhost
}

install_fq_ubi () {
    local os_ver=$1
    local python_interpreter=$2
    local pip=$3
    local ansible_ver=$4

    install_fq_pre_ubi

    pip_install_ansible $pip $ansible_ver

    install_fq_post_ubi

    write_local_cfg
    write_inventories ubi_minimal_${os_ver} $python_interpreter
    ping_localhost
}

install_fq_alpine () {
    local os_major=$1
    local os_minor=$2
    local python_interpreter=$3
    local pip=$4
    local ansible_ver=$5

    install_fq_pre_alpine

    install_pip_alpine $python_interpreter
    pip_install_ansible $pip $ansible_ver

    install_fq_post_alpine

    write_local_cfg
    write_inventories alpine_${os_major}_${os_minor} $python_interpreter
    ping_localhost
}

install_debian_jessie () {
    install_fq_debian jessie /usr/bin/python pip $ANSIBLE_VER
}

install_debian_stretch () {
    install_fq_debian stretch /usr/bin/python3 pip3 $ANSIBLE_VER
}

install_debian_buster () {
    install_fq_debian buster /usr/bin/python3 pip3 $ANSIBLE_VER
}

install_fedora_32 () {
    install_fq_fedora 32 /usr/bin/python3 pip3 $ANSIBLE_VER
}

install_fedora_31 () {
    install_fq_fedora 31 /usr/bin/python3 pip3 $ANSIBLE_VER
}

install_fedora_30 () {
    install_fq_fedora 30 /usr/bin/python3 pip3 $ANSIBLE_VER
}

install_fedora_29 () {
    install_fq_fedora 29 /usr/bin/python3 pip3 $ANSIBLE_VER
}

install_fedora_28 () {
    install_fq_fedora 28 /usr/bin/python pip $ANSIBLE_VER
}

install_fedora_27 () {
    install_fq_fedora 27 /usr/bin/python pip $ANSIBLE_VER
}

install_fedora_26 () {
    install_fq_fedora 26 /usr/bin/python pip $ANSIBLE_VER
}

install_fedora_25 () {
    install_fq_fedora 25 /usr/bin/python pip $ANSIBLE_VER
}

install_fedora_24 () {
    install_fq_fedora 24 /usr/bin/python pip $ANSIBLE_VER
}

install_fedora_23 () {
    install_fq_fedora 23 /usr/bin/python pip $ANSIBLE_VER
}

install_archlinux_latest () {
    install_fq_archlinux latest /usr/sbin/python pip $ANSIBLE_VER
}

install_ubuntu_bionic () {
    install_fq_ubuntu bionic /usr/bin/python3 pip3 $ANSIBLE_VER
}

install_ubuntu_xenial () {
    install_fq_ubuntu xenial /usr/bin/python3 pip3 $ANSIBLE_VER
}

install_centos_7 () {
    install_fq_centos 7 /usr/bin/python pip $ANSIBLE_VER
}

install_centos_8 () {
    install_fq_centos 8 /usr/bin/python3 pip $ANSIBLE_VER
}

install_alpine_3_10 () {
    install_fq_alpine 3 10 /usr/bin/python3 pip $ANSIBLE_VER
}

install_alpine_3_3 () {
    install_fq_alpine 3 3 /usr/bin/python3 pip $ANSIBLE_VER
}

install_alpine_3_4 () {
    install_fq_alpine 3 4 /usr/bin/python3 pip $ANSIBLE_VER
}

install_alpine_3_5 () {
    install_fq_alpine 3 5 /usr/bin/python3 pip $ANSIBLE_VER
}

install_alpine_3_6 () {
    install_fq_alpine 3 6 /usr/bin/python3 pip $ANSIBLE_VER
}

install_alpine_3_7 () {
    install_fq_alpine 3 7 /usr/bin/python3 pip $ANSIBLE_VER
}

install_alpine_3_8 () {
    install_fq_alpine 3 8 /usr/bin/python3 pip $ANSIBLE_VER
}

install_alpine_3_9 () {
    install_fq_alpine 3 9 /usr/bin/python3 pip $ANSIBLE_VER
}

install_ubi8_8_0 () {
    install_fq_ubi 8 /usr/bin/python3 pip3 $ANSIBLE_VER
}
